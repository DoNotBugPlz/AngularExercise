<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <link href="../../ScriptSource/EasyUI/Skins/default/easyui.css" rel="stylesheet"
        type="text/css" />
    <link href="../../ScriptSource/EasyUI/Skins/icon.css" rel="stylesheet" type="text/css" />
    <script src="../../ScriptSource/JQuery/jquery.min.js" type="text/javascript"></script>
    <script src="../../ScriptSource/JQuery/jquery.form.js" type="text/javascript"></script>
    <script src="../../ScriptSource/EasyUI/jquery.easyui.min.js" type="text/javascript"></script>
    <script src="../../ScriptSource/JavaScript/GlobalTools.js" type="text/javascript"></script>
    <script language="javascript" type="text/javascript">
        $(function () {
            $("#categorygrid").datagrid("getPager").pagination({
                displayMsg: ""
            });
        });
        var rootPath = "../../../"; //根目录路径
        var categoryListData; //字典选项集合     
        var categoryDbClick; //记录双击category列表时的行数据
        var currentId; //双击列表行时 记录选中的行对象的id
        var childFromSource; //用于记录由哪个列表触发加载categoryvalueedit.htm的

        // category 双击列表事件  加载表单
        function categoryDblClickRow(rowIndex, rowData) {
            $("#categorygrid").datagrid('unselectAll');
            $("#categorygrid").datagrid('selectRow', rowIndex);
            categoryDbClick = rowData;
            currentId = rowData.id;
            childFromSource = "category";

            GlobalTools.ajax({
                ansyc: false,
                type: "GET",
                url: rootPath + "Sys_category/LoadAllCategory.do",
                success: categoryDblClickSuccess
            });

            var $cvgrid=$("#categoryvaluegrid");
            $cvgrid.treegrid("options").url = rootPath + 'Sys_categoryvalue/LoadPageList.do?id=' + rowData.id + '&type=' + rowData.type;
            $cvgrid.treegrid("reload");
            $("#categoryvaluegrid").treegrid('unselectAll');
            $("#editPanel").panel({ title: "编辑：" + rowData.chinaname, 'href': 'CategoryEditPage.htm', onLoad: loadcategoryform });
            $("#addCategoryValue").show();
        }

        //加载表单
        function categoryDblClickSuccess(data) {
            categoryListData = data;
        }

        // categoryvalue 双击列表事件  加载表单
        function categoryvalueDblClickRow(row) {
            currentId = row.id;
            childFromSource = "categoryvalue";
            $(this).treegrid('unselectAll');
            $(this).treegrid('select', currentId);

            $("#editPanel").panel({ title: categoryDbClick.chinaname + " >> " + row.chinaname, 'href': 'CategoryvalueEditPage.htm', onLoad: loadcategoryvalueform });
        }

        //添加向后台传送的参数 “type”(来源于哪张表)
        function onBeforeLoad(row, param) {
            if (row && row.type) {
                param.type = row.type;
                $(this).treegrid("options").url = rootPath + 'Sys_categoryvalue/LoadPageList.do';
            }
        }

        //加载CategoryEditPage.htm中的信息
        function loadcategoryform() {
            GlobalTools.loadForm($("#form"), { url: rootPath + 'Sys_category/LoadForm.do?id=' + currentId, isNormalModel: false });
        }
        //加载CategoryvalueEditPage.htm中的信息
        function loadcategoryvalueform() {
            var data = $("#categoryvaluegrid").treegrid("getSelected");
            addOtherCtrlsForCategoryvalue(data.categoryid);
            GlobalTools.loadForm($("#form"), { url: rootPath + 'Sys_categoryvalue/LoadForm.do?id=' + currentId, isNormalModel: false });
        }
        //验证sys_categoryvalue.refid
        function checkRefid() {
            if ($.trim($("#refid").val()).length == 0) {
                return;
            }

            GlobalTools.ajax({
                url: rootPath + "Sys_categoryvalue/IsExistRefid.do",
                data: { id: $("#categoryValueId").val(), categoryid: $("#categoryid").val(), parentid: $("#parentid").val(), refid: $("#refid").val() },
                success: function (result) {
                    if (result && result == "true") {//表示已经存在了
                        $("#refid").val("");
                        $.messager.show({
                            title: '提示信息',
                            msg: '编码已经存在，请重新输入编码！',
                            showType: 'show'
                        });
                    }
                }
            });
        }

        //保存CategoryEditPage.htm中的信息
        function saveCategoryForm() {
            GlobalTools.submitForm($("#form"), {
                success: function (data) {
                    GlobalTools.buildForm($("#form"), data);
                    $("#categorygrid").datagrid('reload');
                },
                error: function (msg) {
                    $.messager.alert("提示信息", "保存失败！", "error");
                }
            })
        }
        //保存提示信息
        function showTip(msg) {
            $.messager.show({ 'msg': msg, showSpeed: 2000, 'timeout': 1, title: "提示信息" })
        }
        //保存CategoryvalueEditPage.htm中的信息
        function saveCategoryvalueForm() {
            GlobalTools.submitForm($("#form"), { success: saveCategoryvalueFormSuccess, error: saveCategoryvalueFormError });
        }

        function saveCategoryvalueFormSuccess(data) {
            if ($("input[name='sys_categoryvalue.id']").val() != data.sys_categoryvalue.id)//新增
            {
                if (childFromSource == "category")//由category列表右键触发得来 刷新整个categoryvaluegrid
                {
                    $("#categoryvaluegrid").treegrid("options").url = rootPath + 'Sys_categoryvalue/LoadPageList.do?id=' + data.sys_categoryvalue.categoryid + '&type=category';
                    $("#categoryvaluegrid").treegrid('reload');
                }
                else//由categoryvalue列表右键触发得来 刷新categoryvaluegrid中选中的行
                {
                    var row = $("#categoryvaluegrid").treegrid("getSelected");
                    var parentRow = $("#categoryvaluegrid").treegrid("getParent", row.id);
                    if (parentRow) {
                        $("#categoryvaluegrid").treegrid('reload', parentRow.id);
                    } else {
                        $("#categoryvaluegrid").treegrid('reload', row.id);
                    }
                }
            }

            GlobalTools.buildForm($("#form"), data);
        }

        function saveCategoryvalueFormError() {
            $.messager.alert("提示信息", "保存失败！", "error");
        }

        //category列表 逻辑删除
        function deleteRows() {
            var data = $("#categorygrid").datagrid("getSelections");
            if (data == null) {
                return;
            }
            var length = data.length;
            if (length == 0) {
                return;
            }

            var categoryData = new Array();
            var categoryvalueData = new Array();

            for (var i = 0; i < length; i++) {
                if (data[i].delstatus == "0") {
                    categoryData.push(data[i].id);
                }
            }
            if (categoryData.length > 0) {
                $.messager.confirm('字典项禁用提示', '确定禁用所选择的字典项?', function (result) {
                    if (result) {
                        var result = { 'categoryids': categoryData.join(",") };
                        GlobalTools.ajax({ url: rootPath + 'Sys_category/DeleteList.do', data: result, success: deleteCategorySuccess, error: deleteCategoryError })
                    }
                });
            }
            else {
                $.messager.alert("提示信息", "没有可禁用的选项（可能已经禁用）！", "info");
            }
        }

        //category列表 刷新
        function reloadCategoryGrid() {
            $("#categorygrid").datagrid("reload");
        }
        //category 逻辑删除成功提示
        function deleteCategorySuccess(data, msg) {
            reloadCategoryGrid();
            reloadCategoryValueGrid();
            $.messager.alert("提示信息", "字典禁用成功！", "info");
        }
        //逻辑删除失败提示
        function deleteCategoryError(msg) {
            reloadCategoryGrid();
            reloadCategoryValueGrid();
            $.messager.alert("提示信息", "字典禁用失败！", "error");
        }

        //清空categoryvalue列表
        function removeAllCategoryValueList() {
            if (cateValueCateIdInCateSelected())//清空categoryvalue列表
            {
                $("#categoryvaluegrid").treegrid("loadData", { "rows": [], "total": 0 });
            }
        }

        //判断categoryvalue列表是否属于category列表中选中的项的子项
        function cateValueCateIdInCateSelected() {
            var clearCategoryValueList = false; //判断是否需要清空categoryvalue列表
            var categorySelectedRows = $("#categorygrid").datagrid("getSelections");
            for (var row = 0; row < categorySelectedRows.length; row++) {
                if (categorySelectedRows[row].id == currentId) {
                    clearCategoryValueList = true;
                    break;
                }
            }
            return clearCategoryValueList;
        }

        //categoryvalue 列表 禁用
        function deleteCategoryvalueRows() {
            var data = $("#categoryvaluegrid").treegrid("getSelections");
            if (data == null) {
                return;
            }
            var length = data.length;
            if (length == 0) {
                return;
            }

            var categoryData = new Array();
            var categoryvalueData = new Array();

            for (var i = 0; i < length; i++) {
                categoryvalueData.push(data[i].id);
            }
            if (categoryvalueData.length > 0) {
                $.messager.confirm('字典子项禁用提示', '确定禁用所选择的字典子项?', function (result) {
                    if (result) {
                        var result = { 'categoryvalueids': categoryvalueData.join(",") };
                        GlobalTools.ajax({ url: rootPath + 'Sys_categoryvalue/DeleteList.do', data: result, success: deleteCategoryvalueSuccess, error: deleteCategoryvalueError })
                    }
                });
            }
            else {
                $.messager.alert("提示信息", "没有可禁用的选项（可能已经禁用）！", "info");
            }
        }

        // categoryvalue 列表刷新
        function reloadCategoryValueGrid() {
            if ($("#categoryvaluegrid").treegrid("getData").length > 0) {
                $("#categoryvaluegrid").treegrid("options").url = rootPath + 'Sys_categoryvalue/LoadPageList.do?id=' + currentId + '&type=category';
                $("#categoryvaluegrid").treegrid("reload");
            }
        }

        //category 逻辑删除成功提示
        function deleteCategoryvalueSuccess(data, msg) {
            reloadCategoryValueGrid();
            $.messager.alert("提示信息", "字典禁用成功！", "info");
        }
        //逻辑删除失败提示
        function deleteCategoryvalueError(msg) {
            reloadCategoryValueGrid();
            $.messager.alert("提示信息", "字典禁用失败！", "error");
        }

        //category 列表 删除
        function detroyRows() {
            var data = $("#categorygrid").datagrid("getSelections");
            if (data == null) {
                return;
            }
            var length = data.length;
            if (length == 0) {
                return;
            }
            $.messager.confirm('字典项删除提示', '确定删除所选择的字典项（不可恢复）?', function (result) {
                if (result) {
                    var categoryData = new Array();
                    var categoryvalueData = new Array();

                    for (var i = 0; i < length; i++) {
                        categoryData.push(data[i].id);
                    }
                    if (categoryData.length > 0) {
                        var result = { 'categoryids': categoryData.join(",") }
                        GlobalTools.ajax({ url: rootPath + 'Sys_category/DestroyList.do', data: result, success: detroyCategorySuccess, error: detroyCategoryError });
                    }
                }
            });
        }
        //CategoryGrid物理删除成功提示
        function detroyCategorySuccess(data, msg) {
            reloadCategoryGrid();
            removeAllCategoryValueList();
            $.messager.alert("提示信息", "字典删除成功！", "info");
        }

        //CategoryGrid物理删除失败提示
        function detroyCategoryError(msg) {
            reloadCategoryGrid();
            if (cateValueCateIdInCateSelected()) {
                reloadCategoryValueGrid();
            }
            $.messager.alert("提示信息", "字典删除失败！", "error");
        }

        //categoryvalue 列表 删除
        function detroyCategoryValueRows() {
            var data = $("#categoryvaluegrid").treegrid("getSelections");
            if (data == null) {
                return;
            }
            var length = data.length;
            if (length == 0) {
                return;
            }
            $.messager.confirm('字典子项删除提示', '确定删除所选择的字典子项（不可恢复）?', function (result) {
                if (result) {
                    var categoryData = new Array();
                    var categoryvalueData = new Array();

                    for (var i = 0; i < length; i++) {
                        categoryvalueData.push(data[i].id);
                    }
                    if (categoryvalueData.length > 0) {
                        var result = { 'categoryvalueids': categoryvalueData.join(",") }
                        GlobalTools.ajax({ url: rootPath + 'Sys_categoryvalue/DestroyList.do', data: result, success: detroyCategoryValueSuccess, error: detroyCategoryValueError });
                    }
                }
            });
        }

        //CategoryvalueGrid物理删除成功提示
        function detroyCategoryValueSuccess(data, msg) {
            reloadCategoryValueGrid();
            $.messager.alert("提示信息", "字典子项删除成功！", "info");
        }

        //CategoryvalueGrid物理删除失败提示
        function detroyCategoryValueError(msg) {
            reloadCategoryValueGrid();
            $.messager.alert("提示信息", "字典子项删除失败！", "error");
        }

        //category列表右击弹出菜单
        function categoryContextMenu(e, rowIndex, rowData) {
            $('#categoryMenu').menu('removeItem', $('#dynamicButton'));
            e.preventDefault();
            $(this).datagrid('unselectAll');
            $(this).datagrid('selectRow', rowIndex);
            if (rowData.delstatus && rowData.delstatus == 1) {//已经禁用
                $('#categoryMenu').menu('appendItem', { 'text': '启用', 'id': 'dynamicButton', onclick: startupOneCategory });
            }
            else {

                $('#categoryMenu').menu('appendItem', { 'text': '禁用', 'id': 'dynamicButton', onclick: deleteOneCategory });
            }
            $('#categoryMenu').menu('show', {
                left: e.pageX,
                top: e.pageY
            });
        }

        //categoryvalue列表右击弹出菜单
        function categoryvalueContextMenu(e, row) {
            $('#categoryvalueMenu').menu('removeItem', $('#dynamicButton'));
            e.preventDefault();
            $(this).treegrid('unselectAll');
            $(this).treegrid('select', row.id);
            if (row.delstatus && row.delstatus == 1) {//已经禁用
                $('#categoryvalueMenu').menu('appendItem', { 'text': '启用', 'id': 'dynamicButton', onclick: startupOneCategoryvalue });
            }
            else {

                $('#categoryvalueMenu').menu('appendItem', { 'text': '禁用', 'id': 'dynamicButton', onclick: deleteOneCategoryvalue });
            }
            $('#categoryvalueMenu').menu('show', {
                left: e.pageX,
                top: e.pageY
            });
        }

        //category 列表 右键菜单 启用某一行
        function startupOneCategory() {
            var data = $("#categorygrid").datagrid("getSelected");
            var result = { 'categoryids': data.id };
            GlobalTools.ajax({ url: rootPath + 'Sys_category/ResetList.do', data: result, success: startupCategorySuccess, error: startupCategoryError });
        }

        //category 列表 右键菜单 禁用某一行(其子项全部禁用)
        function deleteOneCategory() {
            var data = $("#categorygrid").datagrid("getSelected");
            var result = { 'categoryids': data.id };
            GlobalTools.ajax({ url: rootPath + 'Sys_category/DeleteList.do', data: result, success: deleteSuccess, error: deleteError })
        }

        //右键菜单 启用某一行
        function startupOneCategoryvalue() {
            var data = $("#categoryvaluegrid").treegrid("getSelected");
            var result = { 'categoryvalueids': data.id };
            GlobalTools.ajax({ url: rootPath + 'Sys_categoryvalue/ResetList.do', data: result, success: startupCategoryValueSuccess, error: startupCategoryValueError });
        }

        //判断某个禁用的字典子项是否可用启用（需要遍历其父节点）
        function canStartUpCategoryValue(id) {
            var result;
            var parentNode = $("#categoryvaluegrid").treegrid("getParent", id);
            if (!parentNode)//categoryvalue列表根节点
            {
                var categoryvalueNode = $("#categoryvaluegrid").treegrid("getSelected");
                return !isCategoryDel(categoryvalueNode.categoryid);
            }
            else {
                if (parentNode.delstatus == 0) {
                    if (parentNode.parentid == 0) {
                        return !isCategoryDel(parentNode.categoryid);
                    }
                    else {
                        return canStartUpCategoryValue(parentNode.id);
                    }
                }
                else {
                    return false;
                }
            }
        }
        //判断category是否禁用
        function isCategoryDel(id) {
            var result = false;
            $.ajax({
                async: false,
                url: rootPath + "Sys_category/GetCategoryDelstatus.do?id=" + id,
                type: "GET",
                success: function (data) {
                    result = data;
                }
            });
            return result;
        }

        //右键菜单 禁用某一行(其子项全部禁用)
        function deleteOneCategoryvalue() {
            var data = $("#categoryvaluegrid").treegrid("getSelected");
            var result = { 'categoryvalueids': data.id };
            GlobalTools.ajax({ url: rootPath + 'Sys_categoryvalue/DeleteList.do', data: result, success: deleteCategoryvalueSuccess, error: deleteCategoryvalueError })
        }
        //添加新字典项category
        function addcategory() {
            $("#categorygrid").datagrid("unselectAll");
            $("#categoryvaluegrid").treegrid("loadData", { "rows": [], "total": 0 });
            $("#editPanel").panel({ title: '添加字典项', 'href': 'CategoryEditPage.htm', onLoad: function () {

            }
            });
        }

        //categoryvalue列表工具条添加
        function addcategoryvalue() {
            var collection = $("#categoryvaluegrid").treegrid("getSelections");
            if (collection.length > 1) {
                $.messager.alert("提示信息", "字典子项列表中选中的选项过多，不能超过1个！", "info");
                return;
            }
            if (collection.length == 1)//作为categoryvalue选中的项的子项
            {
                addchildFromCategoryvalue();
            }
            else//作为category选中的字典项的子项
            {
                collection = $("#categorygrid").datagrid("getSelections");
                if (collection.length > 1) {
                    $.messager.alert("提示信息", "字典列表中选中的选项过多，不能超过1个！", "info");
                    return;
                }
                if (collection.length == 1)//作为category选中的项的子项
                {
                    addchildFromCategory();
                }
                else {
                    $.messager.alert("提示信息", "请先选择需要添加的父选项！", "info");
                    return;
                }
            }
        }

        //添加字典项的子项，在改项之下添加子的categoryvalue  用于category列表
        function addchildFromCategory() {
            var data = $("#categorygrid").datagrid("getSelected");
            var title = "";
            if (data) {
                title = "添加字典（ " + data.chinaname + " ）的子项 ";
            }
            else {
                title = "添加字典（ " + categoryDbClick.chinaname + " ）的子项 ";
            }

            $("#editPanel").panel({ title: title, 'href': 'CategoryvalueEditPage.htm', onLoad: function () {
                if (data) {
                    $("#form").find("#categoryid").val(data.id);
                    $("#tdShowName", $("#form")).text(data.chinaname);
                    childFromSource = "category";
                }
                else {
                    return;
                }

                addOtherCtrlsForCategoryvalue(data.id);
            }
            });
        }
        //添加字典项的子项，在改项之下添加子的categoryvalue  用于categoryvalue列表右键添加
        function addchildFromCategoryvalue() {
            var data = $("#categoryvaluegrid").treegrid("getSelected");
            var title = "";
            if (data) {
                title = "添加（" + data.chinaname + "）的子项"
            }

            $("#editPanel").panel({ title: title, 'href': 'CategoryvalueEditPage.htm', onLoad: function () {
                childFromSource = "categoryvalue";

                if (data) {
                    $("#form").find("#categoryid").val(data.categoryid); $("#form").find("#parentid").val(data.id);
                    // $("#tdShowName", $("#form")).text(data.chinaname+":");
                }

                addOtherCtrlsForCategoryvalue(data.categoryid);
            }
            });
        }

        //添加动态获取的控件 
        function addOtherCtrlsForCategoryvalue(categoryid) {
            GlobalTools.ajax({
                async: false,
                type: 'GET',
                url: rootPath + 'Sys_category/GetCategoryValueEditFormData.do?categoryid=' + categoryid,
                success: addOtherCtrlsSuccess
            });
        }

        function addOtherCtrlsSuccess(data) {
            if (data.length > 0) {
                var addHtml = "";
                var selectCtrl = new Array(); //记录下拉框
                for (var index in data) {
                    if (data[index].type == "text") {
                        addHtml += "<tr><td>" + data[index].display + ":</td><td><input class='easyui-validatebox' type='text' name='sys_categoryvalue." + data[index].name + "' data-options='required:true' style='width: 300px'/></td></tr>";
                    }
                    else if (data[index].type == "select") {
                        addHtml += "<tr><td>" + data[index].display + ":</td><td><input class='easyui-combobox' name='sys_categoryvalue." + data[index].name + "' style='width: 300px' data-options='valueField:\"id\",textField:\"chinaname\"'/></td></tr>";
                        selectCtrl.push({ name: data[index].name, constname: data[index].url });
                    }
                }

                $("#trAppendAfter").after(addHtml);
                // $.parser.parse(); //对新增加的控件进行Easyui渲染
                for (var index in selectCtrl) {//绑下拉框选项
                    $("[name='sys_categoryvalue." + selectCtrl[index].name + "']").combobox({
                        url: rootPath + 'Sys_categoryvalue/GetCategoryValues.do?constname=' + selectCtrl[index].constname
                    });
                }
            }
        }

        //category列表批量启用
        function startupCategoryRows() {
            var data = $("#categorygrid").datagrid("getSelections");
            if (data == null) {
                return;
            }
            var length = data.length;
            if (length == 0) {
                return;
            }

            var categoryData = new Array();
            var categoryvalueData = new Array();

            for (var i = 0; i < length; i++) {
                if (data[i].delstatus == "1") {
                    categoryData.push(data[i].id);
                }
            }

            if (categoryData.length > 0) {
                $.messager.confirm('字典项启用提示', '确定启用所选择的字典项?', function (result) {
                    if (result) {
                        var result = { 'categoryids': categoryData.join(",") }
                        GlobalTools.ajax({ url: rootPath +  'Sys_category/ResetList.do', data: result, success: startupCategorySuccess, error: startupCategoryError });
                    }
                });
            }
            else {
                $.messager.alert("提示信息", "没有可启用的选项（可能已经启用）！", "info");
            }
        }
        //category列表启动成功提示
        function startupCategorySuccess(data, msg) {
            reloadCategoryGrid();
            $.messager.alert("提示信息", "字典启用成功！", "info");
        }
        //category列表启动失败提示
        function startupCategoryError(msg) {
            reloadCategoryGrid();
            $.messager.alert("提示信息", "字典启用失败！", "error");
        }

        //categoryvalue列表 批量启用
        function startupCategoryValueRows() {
            var data = $("#categoryvaluegrid").treegrid("getSelections");
            if (data == null) {
                return;
            }
            var length = data.length;
            if (length == 0) {
                return;
            }

            var categoryvalueData = new Array();
            var canStartUp = true;
            for (var i = 0; i < length; i++) {
                if (data[i].delstatus == "1") {
                    categoryvalueData.push(data[i].id);
                }
            }

            if (categoryvalueData.length > 0) {
                $.messager.confirm('字典子项启用提示', '确定启用所选择的字典子项?', function (result) {
                    if (result) {
                        var result = { 'categoryvalueids': categoryvalueData.join(",") }
                        GlobalTools.ajax({ url: rootPath +  'Sys_categoryvalue/ResetList.do', data: result, success: startupCategoryValueSuccess, error: startupCategoryValueError });
                    }
                });
            }
            else {
                $.messager.alert("提示信息", "没有可启用的选项（可能已经启用）！", "info");
            }
        }

        //categoryvalue列表启动成功提示
        function startupCategoryValueSuccess(data, msg) {
            reloadCategoryValueGrid();
            $.messager.alert("提示信息", "字典子项启用成功！", "info");
        }
        //categoryValue列表启动失败提示
        function startupCategoryValueError(msg) {
            reloadCategoryValueGrid();
            $.messager.alert("提示信息", "字典子项启用失败！", "error");
        }

        //格式化删除标志
        function formatDelstatus(value) {
            if (value == "1") {
                return "是";
            } else {
                return "否";
            }
        }

        //查询category
        function doSearch(value) {
            $("#categorygrid").datagrid("unselectAll");
            $('#categorygrid').datagrid('load', { keyvalue: value });
        }

        function selectCategoryValue(rowIndex, rowData) {
            var data = $("#categoryvaluegrid").treegrid("getSelections");
            if (data == null) {
                $("#addCategoryValue").show();
            }
            else {
                var length = data.length;
                if (length == 0) {
                    $("#addCategoryValue").show();
                }
                else {
                    $("#addCategoryValue").hide();
                }
            }
        }

    </script>
</head>
<body class="easyui-layout">
    <div data-options="region:'west',split:false,border:false" style="width: 355px;">
        <table id="categorygrid" class="easyui-datagrid" data-options="
                title:'字典列表',
            	url:rootPath + 'Sys_category/LoadPageList.do',
            	toolbar:'#categoryTool',
				fit:true,
           	 	singleSelect:false,
				rownumbers: true,         
                pagination:true,  
                pageSize:20,
				idField: 'id',
            	onDblClickRow:categoryDblClickRow,
				onRowContextMenu:categoryContextMenu">
            <thead>
                <tr>
                    <th data-options="field:'ck',checkbox:true">
                    </th>
                    <th data-options="field:'chinaname',sortable:true" width="150px">
                        字典名称
                    </th>
                    <th data-options="field:'constname',sortable:true" width="100px">
                        字典常量
                    </th>
                    <th data-options="field:'delstatus',formatter:formatDelstatus" width="40px" align="center">
                        禁用
                    </th>
                </tr>
            </thead>
        </table>
    </div>
    <div data-options="region:'center',border:false">
        <table id="categoryvaluegrid" class="easyui-treegrid" data-options="
                title:'字典子项列表',
                toolbar:'#categoryvalueTool',
                fit: true,
                border: false,
                singleSelect: false,
                rownumbers: true,
                idField: 'id',
                treeField: 'chinaname',
                onBeforeLoad:onBeforeLoad,
                onDblClickRow: categoryvalueDblClickRow,
                onSelect:selectCategoryValue,
                onUnselect:selectCategoryValue,
                onSelectAll:selectCategoryValue,
                onUnselectAll:selectCategoryValue,
                onContextMenu: categoryvalueContextMenu">
            <thead>
                <tr>
                    <th data-options="field:'ck',checkbox:true">
                    </th>
                    <th data-options="field:'chinaname',width:230" >
                        字典名称
                    </th>
                    <th data-options="field:'delstatus',formatter:formatDelstatus,width:40"  align="center">
                        禁用
                    </th>
                </tr>
            </thead>
        </table>
    </div>
    <div id='editPanel' data-options="region:'east',collapsible:false" style="width: 550px" />
    <div id="categoryTool" class="datagrid-toolbar">
        <div>
            关键字:
            <input class="easyui-searchbox" data-options="prompt:'字典或常量名称',searcher:doSearch"
                style="width: 240px"></input>
        </div>
        <div>
            <a href="javascript:void(0)" class="easyui-linkbutton" onclick="addcategory()" data-options="plain:true,iconCls:'icon-add'">
                添加</a> <a href="javascript:void(0)" class="easyui-linkbutton" onclick="deleteRows()"
                    data-options="plain:true,iconCls:'icon-pause'">禁用</a> <a href="javascript:void(0)"
                        class="easyui-linkbutton" onclick="detroyRows()" data-options="plain:true,iconCls:'icon-cut'">
                        删除</a> <a href="javascript:void(0)" class="easyui-linkbutton" onclick="startupCategoryRows()"
                            data-options="plain:true,iconCls:'icon-ok'">启用</a>
        </div>
    </div>
    <div id="categoryvalueTool" class="datagrid-toolbar">
        <div>
            <a href="javascript:void(0)" class="easyui-linkbutton" onclick="addcategoryvalue()"
                data-options="plain:true,iconCls:'icon-add'" id="addCategoryValue">添加</a> <a href="javascript:void(0)"
                    class="easyui-linkbutton" onclick="deleteCategoryvalueRows()" data-options="plain:true,iconCls:'icon-pause'"
                    id="delCategoryValue">禁用</a> <a href="javascript:void(0)" class="easyui-linkbutton"
                        onclick="detroyCategoryValueRows()" data-options="plain:true,iconCls:'icon-cut'"
                        id="destoryCategoryValue">删除</a> <a href="javascript:void(0)" class="easyui-linkbutton"
                            onclick="startupCategoryValueRows()" data-options="plain:true,iconCls:'icon-ok'"
                            id="startCategoryValue">启用</a>
        </div>
    </div>
    <div id="categoryMenu" class="easyui-menu" style="width: 120px;">
        <div onclick="addchildFromCategory()">
            添加字典值子项</div>
    </div>
    <div id="categoryvalueMenu" class="easyui-menu" style="width: 120px;">
        <div onclick="addchildFromCategoryvalue()">
            添加字典值子项</div>
    </div>
</body>
</html>
